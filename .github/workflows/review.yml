name: Auto-Reviewer

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  auto-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Review Changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get list of changed files
          CHANGED_FILES=$(gh pr diff ${{ github.event.number }} --name-only)
          MERGE_COMMIT_SHA=$( gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/pulls/${{ github.event.number }} | jq -r ".merge_commit_sha")
          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed files found. Exiting."
            exit 0
          fi

          # Fetch JSON data for changed files
          FILES_JSON=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            repos/${{ github.repository }}/pulls/${{ github.event.number }}/files)

          echo "Changed files: $CHANGED_FILES"

          # Loop through each changed file
          for file in $CHANGED_FILES; do
            echo "Processing file: $file"

            # Extract patch for the file
            PATCH=$(echo "$FILES_JSON" | jq -r ".[] | select(.filename == \"$file\") | .patch")
            if [ -z "$PATCH" ]; then
              echo "No patch found for $file."
              continue
            fi

            echo "Patch for $file:"
            echo "$PATCH"

            # Fetch existing comments
            EXISTING_COMMENTS=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.number }}/comments)

            # Parse the patch for changed lines
            echo "$PATCH" | grep -E '^@@' | while IFS= read -r diff_header; do
              $LINE_NUMBER-1=$(echo "$diff_header" | grep -oP '\+\d+' | tr -d '+')
              LINE=$(($LINE_NUMBER - 1))
              if [ -z "$LINE_NUMBER" ]; then
                continue
              fi

              echo "Processing line: $LINE"

              # Check if there's an existing comment on this line
              EXISTING_COMMENT_ID=$(echo "$EXISTING_COMMENTS" | jq -r --arg path "$file"  '.[] | select(.path == $path and .line == $LINE) | .id')
              if [ -n "$EXISTING_COMMENT_ID" ]; then
                # Delete existing comment
                echo "Deleting existing comment ID: $EXISTING_COMMENT_ID"
                gh api -X DELETE repos/${{ github.repository }}/pulls/comments/$EXISTING_COMMENT_ID
              fi

              # Add a new review comment
              echo "Adding new comment to $file at line $LINE"
              gh api \
                --method POST \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                repos/${{ github.repository }}/pulls/${{ github.event.number }}/comments \
                -f "body=Updated review comment for $file at line $LINE" \
                -f "commit_id=${{ github.event.pull_request.head.sha }}" \
                -F "line=$LINE" \
                -f "side=RIGHT" \
                -f "path=$file"
            done
          done
