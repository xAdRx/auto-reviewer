name: Auto-Reviewer

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  auto-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Review Changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPT_TOKEN: ${{ secrets.GPT_TOKEN }}
        run: |
          # Get list of changed files
          CHANGED_FILES=$(gh pr diff ${{ github.event.number }} --name-only)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed files found. Exiting."
            exit 0
          fi

          # Fetch JSON data for changed files
          FILES_JSON=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            repos/${{ github.repository }}/pulls/${{ github.event.number }}/files)

          echo "Changed files: $CHANGED_FILES"

          # Loop through each changed file
          for file in $CHANGED_FILES; do
            echo "Processing file: $file"

            # Extract patch for the file
            PATCH=$(echo "$FILES_JSON" | jq -r ".[] | select(.filename == \"$file\") | .patch")
            if [ -z "$PATCH" ]; then
              echo "No patch found for $file."
              continue
            fi

            # Fetch existing comments
            EXISTING_COMMENTS=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.number }}/comments)

            CONTENT=$(cat $file)
            COMMENT=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $GPT_TOKEN" \
              -d '{
                  "model": "gpt-4",
                  "messages": [
                    {
                      "role": "system",
                      "content": "You are a helpful developer. Your role is to make a simple code review of the provided code. Be clear and concise."
                    },
                    {
                      "role": "user",
                      "content": "'"$CONTENT"'"
                    }
                  ]
                }')
            COMMENT_TEXT=$(echo "$COMMENT" | jq -r '.choices[0].message.content')

            echo "Review of the code: $COMMENT_TEXT"

            EXISTING_COMMENT_ID=$(echo "$EXISTING_COMMENTS" | jq -r \
              --arg path "$file" \
              '.[] | select(.path == $path) | .id')

            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              repos/${{ github.repository }}/pulls/${{ github.event.number }}/comments \
              -f "body=$COMMENT_TEXT" \
              -f "commit_id=${{ github.event.pull_request.head.sha }}" \
              -f "subject_type:file" \
              -f "path=$file"
          done
